version: '3.8'

services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: PandaBackend
    ports:
      - "5000:5000"  # API и WebSocket сервер
    environment:
      - DATABASE_URL=postgres://xsanderadmin:qazxdr5WSE#!QAZXDR%2wse43@postgres:5432/mydatabase
      - NODE_ENV=production
      - CORS_ORIGIN=http://localhost:5173  # Разрешить запросы от React dev сервера
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    container_name: PandaDatabase
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: xsanderadmin
      POSTGRES_PASSWORD: qazxdr5WSE#!QAZXDR%2wse43
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U xsanderadmin -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge