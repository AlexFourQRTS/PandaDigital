const { spawn } = require('child_process');
const path = require('path');

console.log('üêº –ó–∞–ø—É—Å–∫ Panda –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...');

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const server = spawn('npx', ['ts-node', '--transpile-only', 'simple-start.ts'], {
  cwd: path.join(__dirname, 'server'),
  stdio: ['pipe', 'pipe', 'pipe']
});

// –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
const client = spawn('npm', ['run', 'dev'], {
  cwd: path.join(__dirname, 'client'),
  stdio: ['pipe', 'pipe', 'pipe']
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ —Å–µ—Ä–≤–µ—Ä–∞
server.stdout.on('data', (data) => {
  console.log(`[–°–ï–†–í–ï–†] ${data.toString().trim()}`);
});

server.stderr.on('data', (data) => {
  console.error(`[–°–ï–†–í–ï–† ERROR] ${data.toString().trim()}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ –∫–ª–∏–µ–Ω—Ç–∞
client.stdout.on('data', (data) => {
  console.log(`[–ö–õ–ò–ï–ù–¢] ${data.toString().trim()}`);
});

client.stderr.on('data', (data) => {
  console.error(`[–ö–õ–ò–ï–ù–¢ ERROR] ${data.toString().trim()}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
server.on('close', (code) => {
  console.log(`[–°–ï–†–í–ï–†] –ó–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º ${code}`);
});

client.on('close', (code) => {
  console.log(`[–ö–õ–ò–ï–ù–¢] –ó–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º ${code}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  console.log('\nüêº –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ Panda –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...');
  server.kill();
  client.kill();
  process.exit();
});